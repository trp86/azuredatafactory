{
	"name": "df_transform_hospital_admissions",
	"properties": {
		"description": "df_transform_hospital_admissions",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionsSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryLookup"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_date_lookup",
						"type": "DatasetReference"
					},
					"name": "DateLookup"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectRequiredColumns"
				},
				{
					"name": "LookupCountry"
				},
				{
					"name": "SelectReqdColumns"
				},
				{
					"name": "SplitDailyFromWeekly"
				},
				{
					"name": "WeekLookup"
				},
				{
					"name": "JoinWeekLookupAndWeeklyData"
				},
				{
					"name": "SelectReqdColumnsForWeekly"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionsSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryLookup",
				"source(output(",
				"          date_key as date,",
				"          date as date,",
				"          year as short,",
				"          month as short,",
				"          day as short,",
				"          day_name as string,",
				"          day_of_year as short,",
				"          week_of_month as short,",
				"          week_of_year as short,",
				"          month_name as string,",
				"          year_month as integer,",
				"          year_week as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DateLookup",
				"HospitalAdmissionsSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequiredColumns",
				"SelectRequiredColumns, CountryLookup lookup(SelectRequiredColumns@country == CountryLookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCountry",
				"LookupCountry select(mapColumn(",
				"          country = SelectRequiredColumns@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = CountryLookup@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectReqdColumns",
				"SelectReqdColumns split(indicator == 'Daily hospital occupancy' || indicator == 'Daily ICU occupancy' ,",
				"     disjoint: false) ~> SplitDailyFromWeekly@(Daily, Weekly)",
				"DateLookup aggregate(groupBy(year,",
				"          week_of_year),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> WeekLookup",
				"SplitDailyFromWeekly@Weekly, WeekLookup join(reported_year_week == week_of_year,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWeekLookupAndWeeklyData",
				"JoinWeekLookupAndWeeklyData select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_start_date = week_start_date,",
				"          reported_week_end_date = week_end_date,",
				"          source,",
				"          week_of_year",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectReqdColumnsForWeekly"
			]
		}
	}
}